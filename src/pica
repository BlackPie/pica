#!/bin/bash

CONF_FILE='/etc/pica/pica.conf'

exit_error() {
  echo "${*}" >&2
  exit 1
}

# запись кэш файла
# 1 - PATHFILE
# 2 - PA_VERSION
# 3 - RESULT
# 4 - PA_COMMENT_OK
# 5 - PA_COMMENT_FAIL
save_cache() {
  echo "CACHE_VERSION=${2}" > "${1}~" || exit_error "Write cache file ${1}~ failed"
  echo "CACHE_STATUS=${3}" >> "${1}~" || exit_error "Write cache file ${1}~ failed"
  [ "${RESULT}" = 'OK' ] && COMMENT="${PA_COMMENT_OK}" || COMMENT="${PA_COMMENT_FAIL}"
  echo "CACHE_COMMENT=${COMMENT}" >> "${1}~" || exit_error "Write cache file ${1}~ failed"
  mv "${1}~" "${1}" || exit_error "Write cache file ${1} failed"
}

# проверка наличия conf файла
[ -f "${CONF_FILE}" ] || exit_error "Conf file ${CONF_FILE} does not exist"

# проверка права чтения conf файла
[ -r "${CONF_FILE}" ] || exit_error "Can not read conf file ${CONF_FILE}"

source "${CONF_FILE}"
 
[ -z "${PICA_TAGS}" ] && exit_error "Wrong tags"

# проверка наличия папки с тестами и возможности чтения
[ -d "${PICA_TEST_DIR}" -a -r "${PICA_TEST_DIR}" -a -x "${PICA_TEST_DIR}" ] \
  || exit_error "Test's directory ${PICA_TEST_DIR} not found or unreadable"

# проверка непустоты папка с тестами
[ -z "$(ls ${PICA_TEST_DIR})" ] && exit_error "Test's folder is empty"

# проверка наличия папки с кэшем и возможности записи
[ -d "${PICA_TEST_CACHE_DIR}" -a -w "${PICA_TEST_CACHE_DIR}" -a -r "${PICA_TEST_CACHE_DIR}" -a -x "${PICA_TEST_CACHE_DIR}" ] \
  || exit_error "Cache directory ${PICA_TEST_CACHE_DIR} not found or has wrong permissions"

# переборка всех тест файлов
for TEST_FILE in "${PICA_TEST_DIR}"/*.pa; do

  # проверка тест файла на читаемость
  if ! [ -r "${TEST_FILE}" ]; then
    echo "Test file ${TEST_FILE} is unreadable" >&2
    continue
  fi

  source "${TEST_FILE}"

  # отсечение тестов с неудовлетворяющим тегом
  COMMON_TAG=$(echo ${PICA_TAGS[@]} ${PA_TAG[@]} | tr ' ' '\n' | sort | uniq -d) 
  [ -z "${COMMON_TAG}" ] && continue


  # исключение тестов по имени в глобальном конфиге
  TEST_EXCEPTIONS=$(echo ${PICA_EXCEPTIONS[@]} ${TEST_FILE##*/} | tr ' ' '\n' | sort | uniq -d)  
  if [ "${TEST_EXCEPTIONS}" = "${TEST_FILE##*/}" ]; then
    continue
  fi

  # фильтрация тестов по EXPIRED
  # echo $[$(date +'%s')-$(stat -c '%Z' pica)]
  echo $(ls "${PICA_TEST_CACHE_DIR}/${TEST_FILE##*/}.cache" -l --full | cut -f 4)

  # очистка кэша для новой записи (потом добавится проверка EXPIRE)
#  cp /dev/null "${PICA_TEST_CACHE_DIR}/${TEST_FILE##*/}.cache"

  echo -n "${TEST_FILE##*/}... " >&2 

  if ${PA_COMMAND} >/dev/null 2>/dev/null; then
    RESULT='OK'
  else
    RESULT="${PA_SEVERITY}"
  fi
  #echo "${RESULT}" | tee "${PICA_TEST_CACHE_DIR}/${TEST_FILE##*/}.cache" >&2
  echo "${RESULT}" >&2


  save_cache "${PICA_TEST_CACHE_DIR}/${TEST_FILE##*/}.cache" "${PA_VERSION}" "${RESULT}" "${PA_COMMENT_OK}" "${PA_COMMENT_FAIL}"


done
